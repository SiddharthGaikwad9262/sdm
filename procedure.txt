delimiter //
create procedure displayy()
begin
declare vfinished,vcnt int default 0;
declare vno,vd int;
declare vn,vj,status varchar(20);
declare vs,vavg float(9,2);

declare empcur cursor for select empno,ename,job,sal,deptno from emp;
declare continue handler for NOT FOUND set vfinished =1;

open empcur;
label1:loop
fetch empcur into vno,vn,vj,vs,vd;
if vfinished =1 then
   if vcnt=0 then
   select "Emp table is empty";
   end if;
 leave label1;
end if;

set vcnt=vcnt+1;
select avg(sal) into vavg
from emp
where deptno=vd;
if vs<vavg then
set status ='lesser';

elseif vs=vavg then
set status ='equal';

else
set status = 'greater';

end if;

select vno,vn,vj,vs,vd,vavg,status;

end loop;
close empcur;
end //

delimiter ;




1.	write a procedure to insert record into employee table. 
the procedure should accept empno, ename, sal, job, hiredate as input parameter write insert statement inside procedure insert_rec to add one record into table 
 
create procedure insert_rec(peno int,pnm varchar(20),psal decimal(9,2),pjob varchar(20),phiredate date) begin 
     insert into emp(empno,ename,sal,job,hiredate) values(peno,pnm,psal,pjob,phiredate) end// 


   delimiter //
  create procedure insert_record(eno int , en varchar(20),esal float(9,2), ejob varchar(20), ehd date)
begin
insert into emp(empno,ename,sal,job,hiredate) values(eno,en,esal,ejob,ehd);
end //

delimiter ;



2.	write a procedure to delete record from employee table. the procedure should accept empno as input parameter. 
write delete  statement inside procedure delete_emp to delete one record from emp table 

delimiter //
create procedure delete_rec(eno int)
begin
delete from emp
where empno=eno;
end //

delimiter ;



3.	write a procedure to display empno,ename,deptno,dname for all employees with sal 
> given salary. pass salary as a parameter to procedure 


delimiter //
create procedure display_rec(esal float(9,2))
begin
select empno,ename,e.deptno,dname from emp e inner join dept d on e.deptno=d.deptno
where sal>esal;

end//

delimiter ;


4.	write a procedure to find min,max,avg of salary and number of employees in the given deptno. 
deptno --→ in parameter  
min,max,avg and count ---→ out type parameter 
execute procedure and then display values min,max,avg and count 



delimiter //
create procedure find(dno int,out min float(9,2),out max float(9,2),out avg float(9,2), out count int)
begin
select min(sal),max(sal),avg(sal),count(*)  from emp
where deptno=dno;



8.	Write  a procedure to update salary in emp table based on following rules. 
Exp< =35 then no Update 
Exp> 35 and <=38 then 20% of salary 
Exp> 38 then 25% of salary  


delimiter //
create procedure updatesal1()
begin
declare vfinished int default 0; 
declare vsal,incrementsal float(9,2);
declare vempno, vdeptno, experience int;
declare vjob,vename varchar(20);
declare vhiredate date;
declare empcur cursor for select empno,ename,job,sal,hiredate, deptno from emp;
declare continue handler for NOT FOUND set vfinished =1;

open empcur;
label1:loop
fetch empcur into vempno,vename,vjob,vsal,vhiredate,vdeptno;
set experience = floor(datediff(curdate(),vhiredate)/365);
if vfinished =1 then
leave label1;
end if;


if experience <=35 then
set incrementsal = vsal;
update emp
set sal = incrementsal
where deptno=vdeptno;

elseif experience >35 and experience <=38 then
set incrementsal = vsal*1.2;
update emp
set sal =incrementsal
where deptno=vdeptno;

elseif experience>38 then
set incrementsal = vsal*1.25;
update emp
set sal = incrementsal
where deptno=vdeptno;

end if;


select vempno,vename,vjob,vsal,vhiredate,experience,incrementsal,vdeptno;

end loop;

close empcur;


end //

delimiter ;



9.	Write a procedure and a function. 
Function: write a function to calculate number of years of experience of employee.(note: 
pass hiredate as a parameter) 
 
Procedure: Capture the value returned by the above function to calculate the additional allowance for the emp based on the experience. 
Additional Allowance = Year of experience x 3000 
Calculate the additional allowance  
 
and store Empno, ename,Date of Joining, and Experience in years and additional allowance in Emp_Allowance table. 


create table emp_allowance(
empno int primary key,
ename varchar(20),
doj date,
experience int,
additional_allowance int);

set GLOBAL log_bin_trust_function_creators =1;

delimiter //
create function exp1(hd date) returns int
begin
declare experience double;
set experience = floor(datediff(curdate(),hd)/365);
return experience;

end//
delimiter ;

delimiter //
create procedure allowance1(hiredate date)
begin
declare additional_allowance int;
declare experience1 int;
set experience1 = exp1(hiredate);

set additional_allowance= experience1 * 3000;

insert into emp_allowance values (1,'siddharth',hiredate,experience1,additional_allowance);

end //

delimiter ;








